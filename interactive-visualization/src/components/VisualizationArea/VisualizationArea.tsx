import React from 'react'; import Gpu from '../Gpu/Gpu'; import ModelLayer from '../ModelLayer/ModelLayer'; import CommunicationArrow from '../CommunicationArrow/CommunicationArrow'; import styles from './VisualizationArea.module.css'; import { useSimulation } from '../../context/SimulationContext'; import type { GpuState, CommOperation, CommDataType } from '../../context/SimulationContext'; import { AnimatePresence } from 'framer-motion';
const MODEL_LAYERS = ['Embed', 'MHA', 'FFN', 'LN', 'Output'];
const VisualizationArea: React.FC = () => { const { numGpus, gpuStates, stepDetails, strategy } = useSimulation(); const isCommunicating = stepDetails?.type === 'COMM'; const commType = isCommunicating ? stepDetails.operation as CommOperation : undefined; const commDataType = isCommunicating ? stepDetails.dataType as CommDataType : undefined; const isParamsSharded = strategy === 'fsdp'; const isGradsSharded = strategy === 'fsdp'; const isOptStatesSharded = strategy === 'fsdp';
  return ( <div className={styles.visualizationArea}> <div className={styles.layerContainerWrapper}> <div className={styles.layerContainer}> {MODEL_LAYERS.map((layerType) => ( <ModelLayer key={layerType} type={layerType} isHighlighted={stepDetails?.layer === layerType && (stepDetails?.type === 'COMPUTE' || stepDetails?.type === 'COMM' || stepDetails?.type === 'MEMORY_OP')} /> ))} </div> </div> <div className={styles.gpuContainer} style={{ gridTemplateColumns: `repeat(${Math.min(numGpus, 4)}, minmax(200px, 1fr))` }}> {Array.isArray(gpuStates) && gpuStates.map((gpuState: GpuState) => ( <Gpu key={gpuState.id} {...gpuState} numGpusInGroup={numGpus} isParamsSharded={isParamsSharded} isGradsSharded={isGradsSharded} isOptStatesSharded={isOptStatesSharded} currentStepDetails={stepDetails} /> ))} </div> <div className={styles.communicationOverlayWrapper}> <AnimatePresence> {isCommunicating && commType && commDataType && ( <CommunicationArrow key={`comm-${stepDetails?.step}-${commType}`} type={commType} dataType={commDataType} isActive={true} /> )} </AnimatePresence> </div> </div> ); };
export default VisualizationArea;

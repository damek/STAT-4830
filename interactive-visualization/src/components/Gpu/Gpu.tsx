import React from 'react'; import styles from './Gpu.module.css'; import MemoryBar from '../MemoryBar/MemoryBar'; import type { GpuState, StepDetail } from '../../context/SimulationContext'; // Use central types
export interface GpuProps extends GpuState { numGpusInGroup: number; isParamsSharded: boolean; isGradsSharded: boolean; isOptStatesSharded: boolean; currentStepDetails?: StepDetail | null; }
const MAX_MEMORY_PER_TYPE = { Params: 100, Activations: 100, Gradients: 100, OptStates: 100 };
const Gpu: React.FC<GpuProps> = ({ id: gpuId, paramMemory, activationMemory, gradientMemory, optStateMemory, status, currentLayerName: layerFromState, isParamsTempFull, dataShardId, numGpusInGroup, isParamsSharded, isGradsSharded, isOptStatesSharded, currentStepDetails }) => { const isProcessing = status === 'computing'; const isCommunicating = status === 'communicating'; const gpuClasses = [ styles.gpu, isProcessing ? styles.processing : '', isCommunicating ? styles.communicating : '' ].filter(Boolean).join(' '); let statusText = 'Idle'; const currentLayer = currentStepDetails?.layer || layerFromState;
  if (status === 'computing' && currentLayer) { if ((currentStepDetails?.strategy === 'dp' || currentStepDetails?.strategy === 'fsdp') && currentStepDetails?.direction === 'forward' && dataShardId !== undefined) statusText = `Compute B${dataShardId}: Fwd-${currentLayer}`; else if (currentStepDetails?.direction === 'backward') statusText = `Compute Bwd: ${currentLayer}`; else if (currentLayer === 'Optimizer') statusText = `Computing: ${currentLayer}`; else if (currentLayer === 'Gradients') statusText = `Compute Grads g${gpuId}`; else statusText = `Computing: ${currentLayer}`; } else if (status === 'communicating' && currentStepDetails?.operation) { statusText = `${currentStepDetails.operation} (${currentStepDetails.dataType})...`; } else if (status === 'communicating') { statusText = 'Communicating...'; }
  return ( <div className={gpuClasses}> <div className={styles.gpuHeader}>GPU {gpuId} {status !== 'idle' ? '(Active)' : ''}</div> <div className={styles.memorySection}> <MemoryBar type="Params" value={paramMemory} maxValue={MAX_MEMORY_PER_TYPE.Params} shardDenom={numGpusInGroup} isSharded={isParamsSharded} isTempFull={isParamsTempFull} /> <MemoryBar type="Activations" value={activationMemory} maxValue={MAX_MEMORY_PER_TYPE.Activations} shardDenom={1} isSharded={false} /> <MemoryBar type="Gradients" value={gradientMemory} maxValue={MAX_MEMORY_PER_TYPE.Gradients} shardDenom={numGpusInGroup} isSharded={isGradsSharded} /> <MemoryBar type="OptStates" value={optStateMemory} maxValue={MAX_MEMORY_PER_TYPE.OptStates} shardDenom={numGpusInGroup} isSharded={isOptStatesSharded} /> </div> <div className={styles.computeSection}> {statusText} </div> </div> ); };
export default Gpu;
